<?xml version="1.0"?>

<!--Launchfile for MappingDemon-->

<launch>

	<param name="robot_description" command="$(find xacro)/xacro.py '$(find cob_3d_mapping_demonstrator)/md.urdf.xacro'" />
	<include file="$(find cob_3d_mapping_demonstrator)/ros/launch/upload_params.launch"/>

	<node name="cob_3d_mapping_demonstrator_controller" type="cob_3d_mapping_demonstrator" pkg="cob_3d_mapping_demonstrator" output="screen">
		<rosparam file="$(find cob_3d_mapping_demonstrator)/ros/launch/config.yaml"/>
	</node>

	<node name="state_publisher" type="robot_state_publisher" pkg="robot_state_publisher" output="screen">
		<remap from="joint_states" to="/cob_3d_mapping_demonstrator_controller/joint_states"/>
	</node>
  <!-- remap from="base_controller/command" to="cob_3d_mapping_demonstrator/command_vel" /-->

  <node name="execute_button_commands" type="execute_button_commands.py" pkg="cob_3d_mapping_demonstrator" output="screen"/>

  <arg name="geom_v2" default="false" doc="if true, use v2 of geometry mapping"/>
  <include file="$(find cob_3d_mapping_pipeline)/launch/mapping_demo_qppf.launch">
    <arg name="geom_v2" value="$(arg geom_v2)"/>
  </include>
  <node name="kill" type="kill_xtion.sh" pkg="cob_3d_mapping_demonstrator"/>
  <include file="$(find cob_3d_mapping_demonstrator)/ros/launch/openni2.launch"/>

  <group unless="$(arg geom_v2)">
    <include file="$(find cob_3d_visualization)/launch/shape_visualization.launch">
      <!--arg name="shape_array_in" value="segmentation/shape_array" /-->
      <arg name="shape_array_in" value="shape_combined_array_pub" />
    </include>
    <include file="$(find cob_3d_visualization)/launch/shape_visualization.launch">
      <arg name="shape_array_in" value="segmentation/shape_array" />
      <arg name="name" default="input_visualization" />
    </include>
    <node name="cob_3d_mapping_semantics" type="environment_monitoring_node" pkg="cob_3d_mapping_semantics" output="screen">
      <remap from="shape_array" to="geometry_map/map" />
      <remap from="vis_markers_sub" to="/shape_visualization/marker_array" />
    </node>
  </group>
  <!-- node name="rviz" type="rviz" pkg="rviz" output="screen" args="$(find cob_3d_mapping_demonstrator)/rviz.vcg"/-->

	<!--node ns="cob_3d_mapping_demonstrator_controller" pkg="cob_teleop" type="teleop_cob" name="spawn_teleop_keyboard" output="screen"/-->

	<!-- node ns="cob_3d_mapping_demonstrator_controller" name="joint_trajectory_controller" pkg="cob_trajectory_controller" type="cob_trajectory_controller"  respawn="false" output="screen" /-->



</launch>
